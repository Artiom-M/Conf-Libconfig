package Conf::Libconfig::FunctionTable;

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ! WARNING: generated by Conf::Libconfig::ParseSource/0.001
# !          Tue Jun 30 15:11:46 2009
# !          do NOT edit, any changes will be lost !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

$Conf::Libconfig::FunctionTable = [
  {
    'return_type' => 'LIBCONFIG_API void',
    'name' => 'config_destroy',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_get_auto_convert',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API void',
    'name' => 'config_init',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_lookup',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_lookup_bool',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      },
      {
        'type' => 'int *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_lookup_float',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      },
      {
        'type' => 'double *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_lookup_int',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      },
      {
        'type' => 'long *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_lookup_int64',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      },
      {
        'type' => 'long long *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_lookup_string',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'path'
      },
      {
        'type' => 'const char * *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_read',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      },
      {
        'type' => 'FILE *',
        'name' => 'stream'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_read_file',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'filename'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API void',
    'name' => 'config_set_auto_convert',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      },
      {
        'type' => 'int',
        'name' => 'flag'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_add',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'parent'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'int',
        'name' => 'type'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_get_bool',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_get_bool_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_get_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'unsigned int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API double',
    'name' => 'config_setting_get_float',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API double',
    'name' => 'config_setting_get_float_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API short',
    'name' => 'config_setting_get_format',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API long',
    'name' => 'config_setting_get_int',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API long long',
    'name' => 'config_setting_get_int64',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API long long',
    'name' => 'config_setting_get_int64_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API long',
    'name' => 'config_setting_get_int_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_get_member',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API const char *',
    'name' => 'config_setting_get_string',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API const char *',
    'name' => 'config_setting_get_string_elem',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_index',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_length',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_lookup_bool',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'int *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_lookup_float',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'double *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_lookup_int',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'long *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_lookup_int64',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'long long *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_lookup_string',
    'args' => [
      {
        'type' => 'const config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      },
      {
        'type' => 'const char * *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_remove',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'parent'
      },
      {
        'type' => 'const char *',
        'name' => 'name'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_remove_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'parent'
      },
      {
        'type' => 'unsigned int',
        'name' => 'idx'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_bool',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_set_bool_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      },
      {
        'type' => 'int',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_float',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'double',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_set_float_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      },
      {
        'type' => 'double',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_format',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'short',
        'name' => 'format'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API void',
    'name' => 'config_setting_set_hook',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'void *',
        'name' => 'hook'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_int',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'long',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_int64',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'long long',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_set_int64_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      },
      {
        'type' => 'long long',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_set_int_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      },
      {
        'type' => 'long',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_setting_set_string',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'const char *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'extern LIBCONFIG_API config_setting_t *',
    'name' => 'config_setting_set_string_elem',
    'args' => [
      {
        'type' => 'config_setting_t *',
        'name' => 'setting'
      },
      {
        'type' => 'int',
        'name' => 'idx'
      },
      {
        'type' => 'const char *',
        'name' => 'value'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API void',
    'name' => 'config_write',
    'args' => [
      {
        'type' => 'const config_t *',
        'name' => 'config'
      },
      {
        'type' => 'FILE *',
        'name' => 'stream'
      }
    ]
  },
  {
    'return_type' => 'LIBCONFIG_API int',
    'name' => 'config_write_file',
    'args' => [
      {
        'type' => 'config_t *',
        'name' => 'config'
      },
      {
        'type' => 'const char *',
        'name' => 'filename'
      }
    ]
  },
  {
    'return_type' => 'YY_BUFFER_STATE',
    'name' => 'libconfig_yy_create_buffer',
    'args' => [
      {
        'type' => 'FILE *',
        'name' => 'file'
      },
      {
        'type' => 'int',
        'name' => 'size'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yy_delete_buffer',
    'args' => [
      {
        'type' => 'YY_BUFFER_STATE',
        'name' => 'b'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yy_flush_buffer',
    'args' => [
      {
        'type' => 'YY_BUFFER_STATE',
        'name' => 'b'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'YY_BUFFER_STATE',
    'name' => 'libconfig_yy_scan_buffer',
    'args' => [
      {
        'type' => 'char *',
        'name' => 'base'
      },
      {
        'type' => 'yy_size_t',
        'name' => 'size'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'YY_BUFFER_STATE',
    'name' => 'libconfig_yy_scan_bytes',
    'args' => [
      {
        'type' => 'yyconst char *',
        'name' => 'bytes'
      },
      {
        'type' => 'int',
        'name' => 'len'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'YY_BUFFER_STATE',
    'name' => 'libconfig_yy_scan_string',
    'args' => [
      {
        'type' => 'yyconst char *',
        'name' => 'yy_str'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yy_switch_to_buffer',
    'args' => [
      {
        'type' => 'YY_BUFFER_STATE',
        'name' => 'new_buffer'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void *',
    'name' => 'libconfig_yyalloc',
    'args' => [
      {
        'type' => 'yy_size_t',
        'name' => 'arg0'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyfree',
    'args' => [
      {
        'type' => 'void *',
        'name' => 'arg0'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yyget_debug',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'YY_EXTRA_TYPE',
    'name' => 'libconfig_yyget_extra',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'FILE *',
    'name' => 'libconfig_yyget_in',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yyget_leng',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yyget_lineno',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'YYSTYPE *',
    'name' => 'libconfig_yyget_lval',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'FILE *',
    'name' => 'libconfig_yyget_out',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'char *',
    'name' => 'libconfig_yyget_text',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yylex',
    'args' => [
      {
        'type' => 'YYSTYPE *',
        'name' => 'yylval_param'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yylex_destroy',
    'comment' => ' Accessor methods to globals.
   These are made visible to non-reentrant scanners for convenience.',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yylex_init',
    'args' => [
      {
        'type' => 'yyscan_t *',
        'name' => 'scanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yypop_buffer_state',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yypush_buffer_state',
    'args' => [
      {
        'type' => 'YY_BUFFER_STATE',
        'name' => 'new_buffer'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void *',
    'name' => 'libconfig_yyrealloc',
    'args' => [
      {
        'type' => 'void *',
        'name' => 'arg0'
      },
      {
        'type' => 'yy_size_t',
        'name' => 'arg1'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyrestart',
    'args' => [
      {
        'type' => 'FILE *',
        'name' => 'input_file'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_debug',
    'args' => [
      {
        'type' => 'int',
        'name' => 'debug_flag'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_extra',
    'args' => [
      {
        'type' => 'YY_EXTRA_TYPE',
        'name' => 'user_defined'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_in',
    'args' => [
      {
        'type' => 'FILE *',
        'name' => 'in_str'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_lineno',
    'args' => [
      {
        'type' => 'int',
        'name' => 'line_number'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_lval',
    'args' => [
      {
        'type' => 'YYSTYPE *',
        'name' => 'yylval_param'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'libconfig_yyset_out',
    'args' => [
      {
        'type' => 'FILE *',
        'name' => 'out_str'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'libconfig_yywrap',
    'args' => [
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'int',
    'name' => 'yy_flex_strlen',
    'args' => [
      {
        'type' => 'yyconst char *',
        'name' => 'arg0'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  },
  {
    'return_type' => 'void',
    'name' => 'yy_flex_strncpy',
    'args' => [
      {
        'type' => 'char *',
        'name' => 'arg0'
      },
      {
        'type' => 'yyconst char *',
        'name' => 'arg1'
      },
      {
        'type' => 'int',
        'name' => 'arg2'
      },
      {
        'type' => 'yyscan_t',
        'name' => 'yyscanner'
      }
    ]
  }
];


1;
