package Conf::Libconfig::ConstantsTable;

# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# ! WARNING: generated by Conf::Libconfig::ParseSource/0.001
# !          Tue Jun 30 15:11:46 2009
# !          do NOT edit, any changes will be lost !
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

$Conf::Libconfig::ConstantsTable = [
  {
    'name' => 'COMMENT'
  },
  {
    'name' => 'CONFIG_FALSE'
  },
  {
    'name' => 'CONFIG_FORMAT_DEFAULT'
  },
  {
    'name' => 'CONFIG_FORMAT_HEX'
  },
  {
    'name' => 'CONFIG_OPTION_AUTOCONVERT'
  },
  {
    'name' => 'CONFIG_TRUE'
  },
  {
    'name' => 'CONFIG_TYPE_ARRAY'
  },
  {
    'name' => 'CONFIG_TYPE_BOOL'
  },
  {
    'name' => 'CONFIG_TYPE_FLOAT'
  },
  {
    'name' => 'CONFIG_TYPE_GROUP'
  },
  {
    'name' => 'CONFIG_TYPE_INT'
  },
  {
    'name' => 'CONFIG_TYPE_INT64'
  },
  {
    'name' => 'CONFIG_TYPE_LIST'
  },
  {
    'name' => 'CONFIG_TYPE_NONE'
  },
  {
    'name' => 'CONFIG_TYPE_STRING'
  },
  {
    'name' => 'FLEXINT_H',
    'comment' => 'C99 systems have <inttypes.h>. Non-C99 systems may or may not.'
  },
  {
    'name' => 'FLEX_BETA'
  },
  {
    'name' => 'FLEX_SCANNER'
  },
  {
    'name' => 'INITIAL'
  },
  {
    'name' => 'INT16_MAX'
  },
  {
    'name' => 'INT16_MIN'
  },
  {
    'name' => 'INT32_MAX'
  },
  {
    'name' => 'INT32_MAX'
  },
  {
    'name' => 'INT32_MIN'
  },
  {
    'name' => 'INT32_MIN'
  },
  {
    'name' => 'INT64_CONST'
  },
  {
    'name' => 'INT64_CONST'
  },
  {
    'name' => 'INT64_FMT'
  },
  {
    'name' => 'INT64_FMT'
  },
  {
    'name' => 'INT64_HEX_FMT'
  },
  {
    'name' => 'INT64_HEX_FMT'
  },
  {
    'name' => 'INT8_MAX'
  },
  {
    'name' => 'INT8_MIN'
  },
  {
    'name' => 'LIBCONFIG_API'
  },
  {
    'name' => 'LIBCONFIG_API'
  },
  {
    'name' => 'LIBCONFIG_API'
  },
  {
    'name' => 'LIBCONFIG_API',
    'comment' => 'WIN32'
  },
  {
    'name' => 'TOK_ARRAY_END'
  },
  {
    'name' => 'TOK_ARRAY_START'
  },
  {
    'name' => 'TOK_BOOLEAN'
  },
  {
    'name' => 'TOK_COMMA'
  },
  {
    'name' => 'TOK_END'
  },
  {
    'name' => 'TOK_EQUALS'
  },
  {
    'name' => 'TOK_FLOAT'
  },
  {
    'name' => 'TOK_GARBAGE'
  },
  {
    'name' => 'TOK_GROUP_END'
  },
  {
    'name' => 'TOK_GROUP_START'
  },
  {
    'name' => 'TOK_HEX'
  },
  {
    'name' => 'TOK_HEX64'
  },
  {
    'name' => 'TOK_INTEGER'
  },
  {
    'name' => 'TOK_INTEGER64'
  },
  {
    'name' => 'TOK_LIST_END'
  },
  {
    'name' => 'TOK_LIST_START'
  },
  {
    'name' => 'TOK_NAME'
  },
  {
    'name' => 'TOK_NEWLINE'
  },
  {
    'name' => 'TOK_STRING'
  },
  {
    'name' => 'UINT16_MAX'
  },
  {
    'name' => 'UINT32_MAX'
  },
  {
    'name' => 'UINT64_CONST'
  },
  {
    'name' => 'UINT64_CONST'
  },
  {
    'name' => 'UINT64_FMT'
  },
  {
    'name' => 'UINT64_FMT'
  },
  {
    'name' => 'UINT8_MAX'
  },
  {
    'name' => 'WIN32_LEAN_AND_MEAN'
  },
  {
    'name' => 'YY_DECL'
  },
  {
    'name' => 'YY_DECL_IS_OURS'
  },
  {
    'name' => 'YY_EXTRA_TYPE'
  },
  {
    'name' => 'YY_FLEX_MINOR_VERSION'
  },
  {
    'name' => 'YY_FLEX_SUBMINOR_VERSION'
  },
  {
    'name' => 'YY_INT_ALIGNED'
  },
  {
    'name' => 'YY_READ_BUF_SIZE'
  },
  {
    'name' => 'YY_SKIP_YYWRAP'
  },
  {
    'name' => 'YY_START_STACK_INCR'
  },
  {
    'name' => 'YY_STRUCT_YY_BUFFER_STATE'
  },
  {
    'name' => 'YY_TYPEDEF_YY_BUFFER_STATE'
  },
  {
    'name' => 'YY_TYPEDEF_YY_SCANNER_T'
  },
  {
    'name' => 'YY_TYPEDEF_YY_SIZE_T'
  },
  {
    'name' => 'YY_USE_CONST',
    'comment' => '! __cplusplus'
  },
  {
    'name' => 'YY_USE_CONST',
    'comment' => '__STDC__'
  },
  {
    'name' => '__STDC_LIMIT_MACROS'
  },
  {
    'name' => '__libconfig_h'
  },
  {
    'name' => '__libconfig_private_h'
  },
  {
    'name' => '__wincompat_h'
  },
  {
    'name' => 'atoll'
  },
  {
    'name' => 'config_setting_get_hook'
  },
  {
    'name' => 'libconfig_yyHEADER_H'
  },
  {
    'name' => 'libconfig_yyIN_HEADER'
  },
  {
    'name' => 'libconfig_yywrap'
  },
  {
    'name' => 'snprintf'
  },
  {
    'name' => 'strtoull'
  },
  {
    'name' => 'yy_flex_debug'
  },
  {
    'name' => 'yycolumn'
  },
  {
    'name' => 'yyconst'
  },
  {
    'name' => 'yyconst'
  },
  {
    'name' => 'yyextra'
  },
  {
    'name' => 'yyin'
  },
  {
    'name' => 'yyleng'
  },
  {
    'name' => 'yylineno'
  },
  {
    'name' => 'yyout'
  },
  {
    'name' => 'yytext'
  }
];


1;
