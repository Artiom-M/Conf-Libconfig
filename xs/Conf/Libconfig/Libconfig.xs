
/*
 * *********** WARNING **************
 * This file generated by Conf::Libconfig::WrapXS/0.001
 * Any changes made here will be lost
 * ***********************************
 * 1. /usr/lib/perl5/vendor_perl/5.10.0/ExtUtils/XSBuilder/WrapXS.pm:52
 * 2. /usr/lib/perl5/vendor_perl/5.10.0/ExtUtils/XSBuilder/WrapXS.pm:2068
 * 3. ./bin/WrapXSRun.pl:10
 */


#include "/media/ext4/src/src/Conf-Libconfig/src/wincompat.h"

#include "/media/ext4/src/src/Conf-Libconfig/src/scanner.h"

#include "/media/ext4/src/src/Conf-Libconfig/src/grammar.h"

#include "/media/ext4/src/src/Conf-Libconfig/src/private.h"

#include "/media/ext4/src/src/Conf-Libconfig/src/libconfig.h"

#include "EXTERN.h"

#include "perl.h"

#include "XSUB.h"

#include "libconfig_xs_sv_convert.h"

#include "libconfig_xs_typedefs.h"

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API void
config_destroy(config)
    Conf::Libconfig::ConfigT config

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_get_auto_convert(config)
    Conf::Libconfig::ConfigT config

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API void
config_init(config)
    Conf::Libconfig::ConfigT config

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_lookup(config, path)
    Conf::Libconfig::ConfigT config
    const char * path

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_lookup_bool(config, path, value)
    Conf::Libconfig::ConfigT config
    const char * path
    int * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_lookup_float(config, path, value)
    Conf::Libconfig::ConfigT config
    const char * path
    double * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_lookup_int(config, path, value)
    Conf::Libconfig::ConfigT config
    const char * path
    long * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_lookup_int64(config, path, value)
    Conf::Libconfig::ConfigT config
    const char * path
    long long * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_read(config, stream)
    Conf::Libconfig::ConfigT config
    FILE * stream

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_read_file(config, filename)
    Conf::Libconfig::ConfigT config
    const char * filename

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API void
config_set_auto_convert(config, flag)
    Conf::Libconfig::ConfigT config
    int flag

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_add(parent, name, type)
    Conf::Libconfig::ConfigSettingT parent
    const char * name
    int type

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_get_bool(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_get_bool_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_get_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    unsigned int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API double
config_setting_get_float(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API double
config_setting_get_float_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API short
config_setting_get_format(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API long
config_setting_get_int(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API long long
config_setting_get_int64(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API long long
config_setting_get_int64_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API long
config_setting_get_int_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_get_member(setting, name)
    Conf::Libconfig::ConfigSettingT setting
    const char * name

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

extern LIBCONFIG_API const char *
config_setting_get_string(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

extern LIBCONFIG_API const char *
config_setting_get_string_elem(setting, idx)
    Conf::Libconfig::ConfigSettingT setting
    int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_index(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_length(setting)
    Conf::Libconfig::ConfigSettingT setting

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_lookup_bool(setting, name, value)
    Conf::Libconfig::ConfigSettingT setting
    const char * name
    int * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_lookup_float(setting, name, value)
    Conf::Libconfig::ConfigSettingT setting
    const char * name
    double * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_lookup_int(setting, name, value)
    Conf::Libconfig::ConfigSettingT setting
    const char * name
    long * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_lookup_int64(setting, name, value)
    Conf::Libconfig::ConfigSettingT setting
    const char * name
    long long * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_remove(parent, name)
    Conf::Libconfig::ConfigSettingT parent
    const char * name

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_remove_elem(parent, idx)
    Conf::Libconfig::ConfigSettingT parent
    unsigned int idx

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_bool(setting, value)
    Conf::Libconfig::ConfigSettingT setting
    int value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_set_bool_elem(setting, idx, value)
    Conf::Libconfig::ConfigSettingT setting
    int idx
    int value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_float(setting, value)
    Conf::Libconfig::ConfigSettingT setting
    double value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_set_float_elem(setting, idx, value)
    Conf::Libconfig::ConfigSettingT setting
    int idx
    double value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_format(setting, format)
    Conf::Libconfig::ConfigSettingT setting
    short format

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API void
config_setting_set_hook(setting, hook)
    Conf::Libconfig::ConfigSettingT setting
    void * hook

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_int(setting, value)
    Conf::Libconfig::ConfigSettingT setting
    long value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_int64(setting, value)
    Conf::Libconfig::ConfigSettingT setting
    long long value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_set_int64_elem(setting, idx, value)
    Conf::Libconfig::ConfigSettingT setting
    int idx
    long long value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_set_int_elem(setting, idx, value)
    Conf::Libconfig::ConfigSettingT setting
    int idx
    long value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_setting_set_string(setting, value)
    Conf::Libconfig::ConfigSettingT setting
    const char * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

Conf::Libconfig::ConfigSettingT
config_setting_set_string_elem(setting, idx, value)
    Conf::Libconfig::ConfigSettingT setting
    int idx
    const char * value

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API void
config_write(config, stream)
    Conf::Libconfig::ConfigT config
    FILE * stream

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

LIBCONFIG_API int
config_write_file(config, filename)
    Conf::Libconfig::ConfigT config
    const char * filename

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void *
libconfig_yyalloc(arg0, yyscanner)
    yy_size_t arg0
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyfree(arg0, yyscanner)
    void * arg0
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yyget_debug(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

YY_EXTRA_TYPE
libconfig_yyget_extra(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

FILE *
libconfig_yyget_in(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yyget_leng(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yyget_lineno(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

FILE *
libconfig_yyget_out(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yylex_destroy(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yylex_init(scanner)
    yyscan_t * scanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yypop_buffer_state(yyscanner)
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void *
libconfig_yyrealloc(arg0, arg1, yyscanner)
    void * arg0
    yy_size_t arg1
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyrestart(input_file, yyscanner)
    FILE * input_file
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyset_debug(debug_flag, yyscanner)
    int debug_flag
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyset_extra(user_defined, yyscanner)
    YY_EXTRA_TYPE user_defined
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyset_in(in_str, yyscanner)
    FILE * in_str
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyset_lineno(line_number, yyscanner)
    int line_number
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

void
libconfig_yyset_out(out_str, yyscanner)
    FILE * out_str
    yyscan_t yyscanner

MODULE = Conf::Libconfig    PACKAGE = Conf::Libconfig   PREFIX = libconfig_

int
libconfig_yywrap(yyscanner)
    yyscan_t yyscanner

PROTOTYPES: disabled

BOOT:
    items = items; /* -Wall */

