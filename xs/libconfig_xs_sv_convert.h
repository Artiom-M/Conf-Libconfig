
/*
 * *********** WARNING **************
 * This file generated by Conf::Libconfig::WrapXS/0.001
 * Any changes made here will be lost
 * ***********************************
 * 1. /usr/lib/perl5/vendor_perl/5.10.0/ExtUtils/XSBuilder/WrapXS.pm:52
 * 2. /usr/lib/perl5/vendor_perl/5.10.0/ExtUtils/XSBuilder/WrapXS.pm:2068
 * 3. ./bin/WrapXSRun.pl:10
 */


#ifndef LIBCONFIG_XS_SV_CONVERT_H
#define LIBCONFIG_XS_SV_CONVERT_H


    
#ifndef aTHX_
/* let it work with 5.005 */
#define aTHX_
#endif
#define config_xs_sv2_double(sv) (double)SvNV(sv)

#define config_xs_double_2obj(v) sv_2mortal(newSVnv(v))

#define config_xs_sv2_Conf__Libconfig__ConfigValueT(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::ConfigValueT derived object)"),0) ? \
(config_value_t *)SvIV((SV*)SvRV(sv)) : (config_value_t *)NULL):(config_value_t *)NULL)

#define config_xs_Conf__Libconfig__ConfigValueT_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::ConfigValueT", (void*)ptr)
#define config_xs_Conf__Libconfig__ConfigValueT_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::ConfigValueT") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (config_value_t *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_yychar(sv) (yychar)SvIV(sv)

#define config_xs_yychar_2obj(v) sv_2mortal(newSViv(v))

#define config_xs_sv2_Conf__Libconfig__ConfigSettingT(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::ConfigSettingT derived object)"),0) ? \
(config_setting_t *)SvIV((SV*)SvRV(sv)) : (config_setting_t *)NULL):(config_setting_t *)NULL)

#define config_xs_Conf__Libconfig__ConfigSettingT_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::ConfigSettingT", (void*)ptr)
#define config_xs_Conf__Libconfig__ConfigSettingT_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::ConfigSettingT") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (config_setting_t *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_Conf__Libconfig__ParseContext(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::ParseContext derived object)"),0) ? \
(parse_context *)SvIV((SV*)SvRV(sv)) : (parse_context *)NULL):(parse_context *)NULL)

#define config_xs_Conf__Libconfig__ParseContext_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::ParseContext", (void*)ptr)
#define config_xs_Conf__Libconfig__ParseContext_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::ParseContext") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (parse_context *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_Conf__Libconfig__YYBufferState(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::YYBufferState derived object)"),0) ? \
(yy_buffer_state *)SvIV((SV*)SvRV(sv)) : (yy_buffer_state *)NULL):(yy_buffer_state *)NULL)

#define config_xs_Conf__Libconfig__YYBufferState_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::YYBufferState", (void*)ptr)
#define config_xs_Conf__Libconfig__YYBufferState_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::YYBufferState") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (yy_buffer_state *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_yy_size_t(sv) (yy_size_t)SvUV(sv)

#define config_xs_yy_size_t_2obj(v) sv_2mortal(newSVuv(v))

#define config_xs_sv2_Conf__Libconfig__ConfigListT(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::ConfigListT derived object)"),0) ? \
(config_list_t *)SvIV((SV*)SvRV(sv)) : (config_list_t *)NULL):(config_list_t *)NULL)

#define config_xs_Conf__Libconfig__ConfigListT_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::ConfigListT", (void*)ptr)
#define config_xs_Conf__Libconfig__ConfigListT_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::ConfigListT") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (config_list_t *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_Conf__Libconfig__ConfigT(sv) (SvOK(sv)?((SvROK(sv) && (SvTYPE(SvRV(sv)) == SVt_PVMG)) \
|| (Perl_croak(aTHX_ "argument is not a blessed reference (expecting an Conf::Libconfig::ConfigT derived object)"),0) ? \
(config_t *)SvIV((SV*)SvRV(sv)) : (config_t *)NULL):(config_t *)NULL)

#define config_xs_Conf__Libconfig__ConfigT_2obj(ptr)     sv_setref_pv(sv_newmortal(), "Conf::Libconfig::ConfigT", (void*)ptr)
#define config_xs_Conf__Libconfig__ConfigT_create_obj(p,sv,rv,alloc)    rv = newSViv(0) ; \
    sv = newSVrv (rv, "Conf::Libconfig::ConfigT") ; \
    SvUPGRADE(sv, SVt_PVIV) ; \
    SvGROW(sv, sizeof (*p)) ;  \
    p = (config_t *)SvPVX(sv) ;\
    memset(p, 0, sizeof (*p)) ;\
    SvIVX(sv) = (IV)p ;\
    SvIOK_on(sv) ;\
    SvPOK_on(sv) ;

#define config_xs_sv2_SV(sv) (sv)

#define config_xs_SV_2obj(x) (x)

#define config_xs_sv2_SVPTR(sv) (sv)

#define config_xs_SVPTR_2obj(x) (x==NULL?&PL_sv_undef:sv_2mortal(SvREFCNT_inc(x)))

#define config_xs_sv2_PV(sv) (SvPV(sv, PL_na))

#define config_xs_PV_2obj(x) (sv_2mortal(newSVpv(x, 0)))

#define config_xs_sv2_PVnull(sv) (SvOK(sv)?SvPV(sv, PL_na):NULL)

#define config_xs_PVnull_2obj(x) (x==NULL?&PL_sv_undef:sv_2mortal(newSVpv(x, 0)))

#define config_xs_sv2_IV(sv) SvIV(sv)

#define config_xs_IV_2obj(x) sv_2mortal(newSViv(x))

#define config_xs_sv2_NV(sv) SvNV(sv)

#define config_xs_NV_2obj(x) sv_2mortal(newSVnv(x))

#define config_xs_sv2_UV(sv) SvUV(sv)

#define config_xs_UV_2obj(x) sv_2mortal(newSVuv(x))

#define config_xs_sv2_PTR(sv) (SvROK(sv)?((void *)SvIV(SvRV(sv))):NULL)

#define config_xs_PTR_2obj(x) (x?newRV_noinc(newSViv ((IV)x)):&PL_sv_undef)

#define config_xs_sv2_CHAR(sv) (char)SvNV(sv)

#define config_xs_CHAR_2obj(x) sv_2mortal(newSVnv(x))

#define config_xs_sv2_AVREF(sv) (AV*)SvRV(sv)

#define config_xs_AVREF_2obj(x) (x?sv_2mortal(newRV((SV*)x)):&PL_sv_undef)

#define config_xs_sv2_HVREF(sv) (HV*)SvRV(sv)

#define config_xs_HVREF_2obj(x) (x?sv_2mortal(newRV((SV*)x)):&PL_sv_undef)


#endif /* LIBCONFIG_XS_SV_CONVERT_H */
